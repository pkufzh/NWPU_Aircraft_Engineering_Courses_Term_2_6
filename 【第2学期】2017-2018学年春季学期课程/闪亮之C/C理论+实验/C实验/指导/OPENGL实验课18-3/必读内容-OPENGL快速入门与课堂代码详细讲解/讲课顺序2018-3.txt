1、这种程序的特点。（反复加强直至理解），PPT
交互式程序（图形用户界面） 采用：事件循环处理机制（事件驱动式）。
1）事件处理的实现（回调函数）。
2）事件循环的实现。

提示：先让学生自读，然后讲解。
2、OPENGL配置

3、代码的执行流程。
从主函数开始按照代码的顺序讲解（主要讲事件循环处理机制程序的执行）。
1）没有与用户相关的事件(如：键盘等事件）发生时，程序的主要执行顺序如下：
从主函数开始执行：
glutInit(&argc, argv);
……
glutCreateWindow("zhuanqiu") //创建一窗口，该函数的执行自动引发以下两个函数的调用。
          1 resize(int width, int height)// 当前窗口大小改变事件的回调函数，
          2 display(void)   //显示回调，该函数用来画图
 ……
glutMainLoop()程序进入事件循环，
idle(void)//空闲回调函数。
　　　　glutPostRedisplay();//标记当前窗口重新绘制,即调用display函数
        display(void)//显示回调，
idle(void)//空闲回调函数，
     display(void)//显示回调，
不断的重复。
提示：旋转（动画）的实现，是通过显示回调函数（每次画图时转转角度都有变化（角度是变量）和空闲回调函数的反复调用实现的。（需要正反两方面进行说明，即去掉角度变量和空闲回调函数）
2）当键盘事件发生时的执行流程
当在英文状态下按下+，-，Esc键时，执行键盘回调函数，然后是空闲回掉函数，显示回调。
static int slices = 16; 

4、画图的格式（重点）
a.颜色的变换
b.移动坐标轴
c.控制图像旋转的角度
d.调用函数绘图
强调这些绘图过程的每一步都是通过矩阵计算实现的。
写绘制图形代码的重要提示：
　照相机的默认位置(0,0,0)（位于屏幕中心），指向-z，向上。



例：绘制一个线框圆环
    glPushMatrix();
        glTranslated(0,0,-6); //移动坐标
        glRotated(60,0,1,0);//绕y轴转动,角度60
        glRotated(a,0,0,1);//绕z轴旋转, 角度a，不动点原点
        glutWireTorus(0.5,1.8,slices,stacks);//绘制圆环，内半径0.5，外半径1.8
    glPopMatrix();

提示1:绘制图形代码要放在一下两个函数调用中间
glPushMatrix();
．．．．．．．
 glPopMatrix();
提示 2: glTranslated(0,0,-6);使用该函数移动坐标时，
x,y坐标值应小于２和-２，否则将移除窗口，
z的值应该为负,例:-2在-3的前面,写代码时注意前面的图像会挡住后面的图像。

 
 //绘制大球下面的小球，半径0.5。
    glColor3d(1,1,0);//画图的颜色为
    glPushMatrix();  //将当前矩阵压入栈
        glTranslated(0,-1.5,-6); //y值为1+0.5
        glRotated(60,1,0,0);//绕x轴旋转, 角度60
        glRotated(a,0,0,1);//绕z轴旋转, 角度a
        glutSolidSphere(0.5,slices,stacks);//圆球半径是
    glPopMatrix();//将栈顶矩阵弹出来，恢复当前矩阵到原来的状态

变换Z轴的数据-7和-5，讲清楚遮挡问题。

6）讲优秀大作业
